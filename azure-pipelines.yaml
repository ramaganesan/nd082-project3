name: Azure Pipelines
trigger:
- master
variables:
  python.version: '3.7.6'
  TF_VAR_ARM_SUBSCRIPTION_ID: $(subscription_id)
  TF_VAR_ARM_CLIENT_ID: $(client_id)
  TF_VAR_ARM_CLIENT_SECRET: $(client_secret)
  TF_VAR_ARM_TENANT_ID: $(tenant_id)
  TF_VAR_STORAGE_ACCESS_KEY: $(access_key)
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.12.3'
    
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'nd082-project3-terraform'
        backendAzureRmResourceGroupName: 'nd082-tstate_rg'
        backendAzureRmStorageAccountName: 'nd082tfstorage10556'
        backendAzureRmContainerName: 'nd082tfcontainer'
        backendAzureRmKey: '$(TF_VAR_STORAGE_ACCESS_KEY)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
    - task: TerraformTaskV1@0
      displayName: "Terraform Plan"
      inputs:
        provider: 'azurerm'
        command: 'plan'
        backendServiceArm: 'nd082-project3-terraform'
        backendAzureRmResourceGroupName: 'nd082-tstate_rg'
        backendAzureRmStorageAccountName: 'nd082tfstorage10556'
        backendAzureRmContainerName: 'nd082tfcontainer'
        backendAzureRmKey: '$(TF_VAR_STORAGE_ACCESS_KEY)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        commandOptions: |
          -input=false
          -backend=false
          -var "subscription_id=$(TF_VAR_ARM_SUBSCRIPTION_ID)" "client_id=$(TF_VAR_ARM_CLIENT_ID)" "client_secret=$(TF_VAR_ARM_CLIENT_SECRET)" 
          "tenant_id=$(TF_VAR_ARM_TENANT_ID)" "access_key=$(TF_VAR_STORAGE_ACCESS_KEY)"



